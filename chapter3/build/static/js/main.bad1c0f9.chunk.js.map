{"version":3,"sources":["services/PersonsStorage.js","Persons.js","Filter.js","PersonsForm.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","person","post","personId","delete","resourceURL","updatedPerson","put","Persons","persons","setPersons","map","name","number","type","value","onClick","id","window","confirm","filter","entry","PersonsStorage","p","Filter","useState","searchedPerson","setSearchedPerson","onChange","event","target","filtered","index","toLowerCase","indexOf","String","push","filterArray","PersonForm","newPerson","setNewPerson","updatePerson","resp","concat","onSubmit","preventDefault","undefined","length","result","App","useEffect","storedPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bad1c0f9.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseURL = 'https://warm-stream-65671.herokuapp.com/api/persons'\r\nconst getPersons = () => {\r\n  const request = axios.get(baseURL)\r\n  return request.then(response => response.data)\r\n}\r\nconst postPerson = (person) => {\r\n  const request = axios.post(baseURL, person)\r\n  return request.then(response => response.data)\r\n}\r\nconst deletePerson = (personId) => {\r\n  return axios.delete(baseURL + `/${personId}`)\r\n}\r\nconst updatePerson = (resourceURL, updatedPerson) => {\r\n  return axios.put(baseURL + resourceURL, updatedPerson)\r\n}\r\nexport default {\r\n  getPersons,\r\n  postPerson,\r\n  deletePerson,\r\n  updatePerson\r\n}","import PersonsStorage from \"./services/PersonsStorage\"\r\n\r\nconst Persons = ({ persons, setPersons }) => {\r\n  const deletePerson = (personId) => {\r\n    if (window.confirm(`Delete ${persons.filter(entry => entry.id === personId)[0].name} ?`)) //Ensure that user wish to delete\r\n      PersonsStorage.deletePerson(personId)\r\n      .then(response => setPersons(persons.filter(p => p.id !== personId)))\r\n  }\r\n  return (\r\n    <div>{persons.map(person => <li key = {person.id}>{person.name} {person.number} <input type=\"button\" value=\"delete\" onClick={() => deletePerson(person.id)} /></li>)}</div>\r\n  )\r\n}\r\nexport default Persons","import { useState } from \"react\"\r\nimport Persons from './Persons.js'\r\nconst Filter = ({persons, setPersons}) =>{\r\n    // Show persons matching user input from searchbar\r\n    const [searchedPerson, setSearchedPerson] = useState([])\r\n    const handleInputSearchedPerson = (event) => {\r\n      setSearchedPerson(event.target.value)\r\n    }\r\n    const filterArray = (persons, searchedPerson) =>{\r\n    let filtered = []\r\n    for (let index in persons){\r\n      if(persons[index].name.toLowerCase().indexOf(String(searchedPerson).toLowerCase()) !== -1)\r\n      filtered.push(persons[index])\r\n    }\r\n    return filtered\r\n  }\r\n    return (\r\n      <div>\r\n        <div><p>filter shown with<input onChange={handleInputSearchedPerson}/></p></div>\r\n        <h3>Numbers</h3>\r\n        <Persons persons={filterArray(persons, searchedPerson)} setPersons={setPersons}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Filter","import { useState } from 'react'\r\nimport PersonsStorage from './services/PersonsStorage.js'\r\nconst PersonForm = ({ persons, setPersons }) => {\r\n  const [newPerson, setNewPerson] = useState([])\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setNewPerson({ name: event.target.value, number: newPerson.number })\r\n  }\r\n  const handleInputNumberChange = (event) => {\r\n    setNewPerson({ name: newPerson.name, number: event.target.value })\r\n  }\r\n\r\n  const handleAddPerson = (event) => {\r\n    event.preventDefault();\r\n    if (newPerson.number === undefined || newPerson.name === undefined) return;\r\n    if (newPerson.number.length < 1 || newPerson.name.length < 1) return;\r\n\r\n    //If name is already present prompt update\r\n    if (persons.map(person => person.name.toLowerCase()).indexOf(newPerson.name.toLowerCase()) !== -1) {\r\n      if (window.confirm(`${newPerson.name} is already added to phonebook, replace the old number ?`))\r\n        updatePerson()\r\n      return;\r\n    }\r\n\r\n    PersonsStorage.postPerson(newPerson).then(result => {\r\n      setPersons(persons.concat(result))\r\n    })\r\n    setNewPerson('')\r\n  }\r\n  const updatePerson = () => {\r\n    // 1. find updated person by name, \r\n    // 2. take its ID, \r\n    // 3. send put request for this URL\r\n    // 4. filter out old object and set state with new one\r\n    const updatedPerson = persons.filter(person => person.name === newPerson.name)\r\n    const resourceURL = `/${updatedPerson[0].id}`\r\n    PersonsStorage.updatePerson(resourceURL, newPerson).then(resp =>\r\n      setPersons(persons.filter(p => p.id !== updatedPerson[0].id).concat(resp.data)))\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleAddPerson}>\r\n        <div>Name:<input onChange={handleInputNameChange} /></div>\r\n        <div>Number:<input onChange={handleInputNumberChange} /></div>\r\n        <input type=\"submit\" value=\"Add\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default PersonForm","import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport Filter from './Filter.js'\r\nimport PersonForm from './PersonsForm.js';\r\nimport PersonsStorage from './services/PersonsStorage.js'\r\nfunction App() {\r\n  const [persons, setPersons] = useState([])\r\n  useEffect(() => {\r\n    PersonsStorage.getPersons().then(storedPersons => {\r\n      setPersons(storedPersons)\r\n    })\r\n  }, [persons.number])\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <PersonForm persons={persons} setPersons={setPersons} />\r\n      <Filter persons={persons} setPersons={setPersons} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport App from './App'\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}